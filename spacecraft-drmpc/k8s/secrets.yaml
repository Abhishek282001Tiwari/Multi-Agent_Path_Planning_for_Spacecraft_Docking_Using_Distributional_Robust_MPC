apiVersion: v1
kind: Secret
metadata:
  name: spacecraft-secrets
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: security
type: Opaque
data:
  # Database credentials (base64 encoded)
  database-url: cG9zdGdyZXNxbDovL3NwYWNlY3JhZnQ6c3BhY2VjcmFmdF9wYXNzd29yZEBzcGFjZWNyYWZ0LWRhdGFiYXNlOjU0MzIvc3BhY2VjcmFmdF9zaW0=  # postgresql://spacecraft:spacecraft_password@spacecraft-database:5432/spacecraft_sim
  postgres-user: c3BhY2VjcmFmdA==  # spacecraft
  postgres-password: c3BhY2VjcmFmdF9wYXNzd29yZA==  # spacecraft_password
  postgres-replication-user: cmVwbGljYXRvcg==  # replicator
  postgres-replication-password: cmVwbGljYXRvcl9wYXNzd29yZA==  # replicator_password
  
  # Redis credentials
  redis-url: cmVkaXM6Ly9zcGFjZWNyYWZ0LXJlZGlzOjYzNzkv  # redis://spacecraft-redis:6379/
  redis-password: cmVkaXNfcGFzc3dvcmQ=  # redis_password
  
  # API Keys and tokens
  api-secret-key: YTMyY2MzMzJhZmQ4OGExNzJiYzBhMzk4N2FlYzJiNWU4ZjVhMTU4ZjI0YjI5NzNkYTVhZTI2ZmU5Yjg2ZmNlNA==
  jwt-secret: ZmFjZWJvb2tfYWNjZXNzX3Rva2VuX2Y5N2IzOWNlNWQ0ZjQ2NzI4NzQyZDNlM2JjM2YzOGEyZGY=
  
  # External service credentials
  mosek-license-server: bW9zZWstbGljZW5zZS1zZXJ2ZXI6MzUxNg==  # mosek-license-server:3516
  aws-access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  # AKIAIOSFODNN7EXAMPLE
  aws-secret-access-key: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  # wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  
  # Encryption keys
  encryption-key: MzJieXRlc19lbmNyeXB0aW9uX2tleV9mb3Jfc3BhY2VjcmFmdA==  # 32bytes_encryption_key_for_spacecraft
  signing-key: czJrZXlmb3JzaWduaW5nX3NwYWNlY3JhZnRfZGF0YV8zMmJ5dGVz  # s2keyforsigning_spacecraft_data_32bytes

---
apiVersion: v1
kind: Secret
metadata:
  name: software-licenses
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: licenses
type: Opaque
data:
  # MOSEK License (base64 encoded dummy license)
  mosek.lic: |
    IyBNT1NFS1RBTyBMaWNlbnNlIEZpbGUgKER1bW15IGZvciBFeGFtcGxlKQojIFRoaXMgaXMgYSBk
    dW1teSBsaWNlbnNlIGZpbGUgZm9yIGRlbW9uc3RyYXRpb24gcHVycG9zZXMKIyBQbGVhc2UgcmVw
    bGFjZSB3aXRoIHlvdXIgYWN0dWFsIE1PU0VLIGxpY2Vuc2UKCiMgRVhBTVBMRSBMSUNFTlNFOgoj
    IFZFTkRPUjogTU9TRUsKIyBTRVJJQUw6IDEyMzQ1Njc4OTAKIyBUWVBFOiBhY2FkZW1pYwojIEZF
    QVRVUkVTOiBhbGwKIyBFWFBJUkVTOiAyMDI1LTEyLTMxCiMgQ09NUEFOWU5BTUU6IFNwYWNlY3Jh
    ZnQgU2ltdWxhdGlvbiBJbmMKIyBERVBBUlRNRU5UOiBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQK

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhVENDQTFHZ0F3SUJBZ0lVRjlwMjE2VFZS
    MFlvcjdGUU5HQzJqbGE1MVY0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNR
    VXN4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJ
    RmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TXpBek1EZ3hNems0TURaYUZ3MHlOREF6Ck1EZ3hN
    ems0TURaYU1FVXhDekFKQmdOVkJBWVRBa0ZMTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1T
    RXdId1lEVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSeklGQjBlU0JNZEdRd2dnSWlNQTBHQ1Nx
    R1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0dGlnRFNHUXNIb3V4aVVOZnRVWGZGNUJ4
    WjFySVE4VWdHZVRSa01yNzBjU3BXWHo0dXNHaUhGVjVHNkRZV1A4QW9YV3ZTaVZjNXZYSEJEckFG
    M0QraG52dVFsQVhWeFgrTm1tMnBabFZSaGEzSWpHK3IzQ09lWGxEY2NmZGtnS2h6MllTQUZ0Wm4z
    VXNCUTNBc3hVRHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZB
    QVNDQVE4QU1JSUJDekNDQVFRQ0FRQUFBQUFBQUFBQUFBQUEKQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InNwYWNlY3JhZnQi
    LCJwYXNzd29yZCI6InNwYWNlY3JhZnRfcGFzc3dvcmQiLCJhdXRoIjoiYzNCaFkyVmpjbUZtZEQ1
    emNHRmpaV05zWVdaMFgzQmhjM04zYjNKayJ9fX0=

---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-secrets
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: webhooks
type: Opaque
data:
  # Webhook secrets for external integrations
  github-webhook-secret: Z2l0aHViX3dlYmhvb2tfc2VjcmV0XzEyMw==  # github_webhook_secret_123
  slack-webhook-url: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVDEyMzQ1Njc4L0IxMjM0NTY3OC9YWFhYWFhYWFhYWFhYWFhYWFhYWFg=  # https://hooks.slack.com/services/...
  discord-webhook-url: aHR0cHM6Ly9kaXNjb3JkYXBwLmNvbS9hcGkvd2ViaG9va3MvMTIzNDU2Nzg5L1hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFg=  # https://discordapp.com/api/webhooks/...

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: spacecraft-sim
  labels:
    app: monitoring
    version: v1.0.0
    component: monitoring-auth
type: Opaque
data:
  # Monitoring system credentials
  grafana-admin-user: YWRtaW4=  # admin
  grafana-admin-password: Z3JhZmFuYV9hZG1pbl9wYXNzd29yZA==  # grafana_admin_password
  prometheus-config: cHJvbWV0aGV1c19jb25maWc=  # prometheus_config
  alertmanager-config: YWxlcnRtYW5hZ2VyX2NvbmZpZw==  # alertmanager_config

---
apiVersion: v1
kind: Secret
metadata:
  name: backup-credentials
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: backup
type: Opaque
data:
  # Backup service credentials
  s3-access-key: UzNfQUNDRVNTX0tFWV9JRA==  # S3_ACCESS_KEY_ID
  s3-secret-key: UzNfU0VDUkVUX0FDQ0VTU19LRVk=  # S3_SECRET_ACCESS_KEY
  s3-bucket-name: c3BhY2VjcmFmdC1zaW0tYmFja3Vwcw==  # spacecraft-sim-backups
  backup-encryption-key: YmFja3VwX2VuY3J5cHRpb25fa2V5XzMyX2J5dGVz  # backup_encryption_key_32_bytes

---
# Service Account for the spacecraft application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spacecraft-drmpc-sa
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: security
automountServiceAccountToken: true

---
# RBAC Cluster Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spacecraft-drmpc-role
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]

---
# RBAC Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spacecraft-drmpc-binding
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spacecraft-drmpc-role
subjects:
- kind: ServiceAccount
  name: spacecraft-drmpc-sa
  namespace: spacecraft-sim

---
# Role for namespace-specific operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: spacecraft-sim
  name: spacecraft-namespace-role
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "delete", "patch", "update"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]

---
# Role Binding for namespace-specific operations
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spacecraft-namespace-binding
  namespace: spacecraft-sim
  labels:
    app: spacecraft-drmpc
    version: v1.0.0
    component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spacecraft-namespace-role
subjects:
- kind: ServiceAccount
  name: spacecraft-drmpc-sa
  namespace: spacecraft-sim